<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>HoferLabs</title>
  
  <subtitle>Automation &amp; Security</subtitle>
  <link href="http://hoferlabs.ch/atom.xml" rel="self"/>
  
  <link href="http://hoferlabs.ch/"/>
  <updated>2023-05-07T10:18:08.070Z</updated>
  <id>http://hoferlabs.ch/</id>
  
  <author>
    <name>Andrea Hofer</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Bicep | Deployment Scripts</title>
    <link href="http://hoferlabs.ch/2023/05/07/Bicep-Deployment-Scripts/"/>
    <id>http://hoferlabs.ch/2023/05/07/Bicep-Deployment-Scripts/</id>
    <published>2023-05-07T07:04:37.000Z</published>
    <updated>2023-05-07T10:18:08.070Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Intro-and-possible-use-cases"><a href="#Intro-and-possible-use-cases" class="headerlink" title="Intro and possible use cases"></a>Intro and possible use cases</h1><p>For a project I needed to create AAD groups while only having a single Bicep&#x2F;ARM deployment (including UI Wizard)… I decided to go with deployment scripts (Powershell) and a user-assigned Managed Identity. This approach can be used for <a href="https://learn.microsoft.com/en-us/partner-center/marketplace/plan-azure-app-solution-template">Azure Market Place offers</a>.</p><p><a href="https://learn.microsoft.com/en-us/training/modules/extend-resource-manager-template-deployment-scripts/1-introduction">Deployment scripts in ARM&#x2F;Bicep enable custom automation for your environment management. You use deployment scripts to execute your own scripts within your ARM template deployments.</a></p><p>Possible use cases (not complete): </p><ul><li>create resources which can’t be described using Bicep, e.g.:<ul><li>AAD users &#x2F; groups</li><li>External identities settings like catalogs and access packages</li><li>Identity governance settings like connected organizations</li></ul></li><li>consume external APIs</li></ul><p>Outputs from deployment scripts can be “returned” (e.g created AAD group identifiers).  </p><span id="more"></span><h1 id="Scenario-for-this-blog-post"><a href="#Scenario-for-this-blog-post" class="headerlink" title="Scenario for this blog post"></a>Scenario for this blog post</h1><p>I created a small project to outline different options in Bicep: </p><ul><li>describe user “<a href="mailto:&#106;&#111;&#x68;&#x6e;&#x2e;&#99;&#x6f;&#x6e;&#x74;&#x6f;&#115;&#x6f;&#x40;&#x68;&#111;&#x66;&#x65;&#114;&#x6c;&#97;&#98;&#115;&#46;&#99;&#x68;">&#106;&#111;&#x68;&#x6e;&#x2e;&#99;&#x6f;&#x6e;&#x74;&#x6f;&#115;&#x6f;&#x40;&#x68;&#111;&#x66;&#x65;&#114;&#x6c;&#97;&#98;&#115;&#46;&#99;&#x68;</a>“ (deployment script)</li><li>describe group “Sales” and describe Johns Membership (deployment script)</li><li>describe storage account and a file share (Bicep)</li><li>describe group Azure roles Storage File Data SMB Share Contributor (Bicep)</li></ul><p>In this post, we focus on the deployment scripts and the required setup. <a href="https://github.com/hoferandrea/blog/tree/main/DeploymentScriptAndUiWizard">You can find the newest versions in my public Repo.</a></p><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><h2 id="Setup-Script"><a href="#Setup-Script" class="headerlink" title="Setup Script"></a>Setup Script</h2><p>Deployment scripts don’t use the context (&#x2F;permissions) of the user which deploys the Bicep template, instead they can use a <strong>user-assigned Managed Identity</strong> which needs the required permissions. And because deployments scripts will automatically create a Storage Account and Container, we also need a temporary deployment resource group.</p><pre class="line-numbers language-powershell" data-language="powershell"><div class="caption"><span>setup.ps1</span><a href="https://github.com/hoferandrea/blog/tree/main/DeploymentScriptAndUiWizard">setup.ps1</a></div><code class="language-powershell"><span class="token string">"#################################################"</span><span class="token string">"# hoferlabs.ch                                  #"</span><span class="token string">"# implement requirements for deployment script  #"</span><span class="token string">"# Version: 0.1                                  #"</span><span class="token string">"#################################################"</span><span class="token comment"># edit here</span><span class="token variable">$strDeploymentResourceGroupName</span> = <span class="token string">"rg-deploymentScript-10"</span><span class="token variable">$strUserAssignedManagedIdentityName</span> = <span class="token string">"mi-deploymentScript-10"</span><span class="token variable">$strLocation</span> = <span class="token string">"Switzerlandnorth"</span><span class="token variable">$arrPermissions</span> = <span class="token string">"User.ReadWrite.All"</span><span class="token punctuation">,</span> <span class="token string">"Group.ReadWrite.All"</span><span class="token punctuation">,</span> <span class="token string">"Directory.ReadWrite.All"</span><span class="token punctuation">,</span> <span class="token string">"GroupMember.ReadWrite.All"</span><span class="token punctuation">,</span> <span class="token string">"RoleManagement.ReadWrite.Directory"</span> <span class="token comment"># "RoleManagement.ReadWrite.Directory" is needed if we create a group which can be assigned Azure roles</span><span class="token comment"># do not edit</span><span class="token variable">$strGraphAppId</span> = <span class="token string">"00000003-0000-0000-c000-000000000000"</span><span class="token function">Connect-MgGraph</span> <span class="token operator">-</span>Scopes Application<span class="token punctuation">.</span>Read<span class="token punctuation">.</span>All<span class="token punctuation">,</span> AppRoleAssignment<span class="token punctuation">.</span>ReadWrite<span class="token punctuation">.</span>All<span class="token punctuation">,</span> RoleManagement<span class="token punctuation">.</span>ReadWrite<span class="token punctuation">.</span>Directory<span class="token variable">$objContext</span> = <span class="token function">Get-AzContext</span><span class="token string">"connected to subscription <span class="token function">$<span class="token punctuation">(</span><span class="token variable">$objContext</span><span class="token punctuation">.</span>Subscription<span class="token punctuation">.</span>Name<span class="token punctuation">)</span></span> (<span class="token function">$<span class="token punctuation">(</span><span class="token variable">$objContext</span><span class="token punctuation">.</span>Subscription<span class="token punctuation">.</span>Id<span class="token punctuation">)</span></span>) with account <span class="token function">$<span class="token punctuation">(</span><span class="token variable">$objContext</span><span class="token punctuation">.</span>Account<span class="token punctuation">)</span></span>"</span><span class="token string">"create deployment resource group <span class="token variable">$strDeploymentResourceGroupName</span>..."</span><span class="token variable">$objResourceGroup</span> = <span class="token function">New-AzResourceGroup</span> <span class="token operator">-</span>Name <span class="token variable">$strDeploymentResourceGroupName</span> <span class="token operator">-</span>Location <span class="token variable">$strLocation</span><span class="token string">"create user-assigned managed identity <span class="token variable">$strUserAssignedManagedIdentityName</span>..."</span><span class="token variable">$objUserAssignedManagedIdentity</span> = <span class="token function">New-AzUserAssignedIdentity</span> <span class="token operator">-</span>ResourceGroupName <span class="token variable">$strDeploymentResourceGroupName</span> <span class="token operator">-</span>Name <span class="token variable">$strUserAssignedManagedIdentityName</span> <span class="token operator">-</span>Location <span class="token variable">$strLocation</span><span class="token string">"waiting for user-assigned managed identity to be created..."</span><span class="token function">start-sleep</span> 50<span class="token string">"get graph app..."</span><span class="token variable">$objGraphApp</span> = <span class="token function">Get-MgServicePrincipal</span> <span class="token operator">-</span><span class="token keyword">Filter</span> <span class="token string">"AppId eq '<span class="token variable">$strGraphAppId</span>'"</span><span class="token string">"assign permissions..."</span><span class="token keyword">ForEach</span> <span class="token punctuation">(</span><span class="token variable">$strPermission</span> in <span class="token variable">$arrPermissions</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token string">" assign permission <span class="token variable">$strPermission</span>..."</span>  <span class="token variable">$objRole</span> = <span class="token variable">$objGraphApp</span><span class="token punctuation">.</span>AppRoles <span class="token punctuation">|</span> <span class="token function">Where-Object</span> <span class="token punctuation">&#123;</span> <span class="token variable">$_</span><span class="token punctuation">.</span>Value <span class="token operator">-eq</span> <span class="token variable">$strPermission</span> <span class="token punctuation">&#125;</span>  <span class="token variable">$objResult</span> = <span class="token function">New-MgServicePrincipalAppRoleAssignment</span> <span class="token operator">-</span>ServicePrincipalId $<span class="token punctuation">(</span><span class="token variable">$objUserAssignedManagedIdentity</span><span class="token punctuation">.</span>PrincipalId<span class="token punctuation">)</span> <span class="token operator">-</span>PrincipalId $<span class="token punctuation">(</span><span class="token variable">$objUserAssignedManagedIdentity</span><span class="token punctuation">.</span>PrincipalId<span class="token punctuation">)</span> <span class="token operator">-</span>ResourceId <span class="token variable">$objGraphApp</span><span class="token punctuation">.</span>Id <span class="token operator">-</span>AppRoleId <span class="token variable">$objRole</span><span class="token punctuation">.</span>Id<span class="token punctuation">&#125;</span><span class="token string">"verify permissions..."</span><span class="token variable">$arrRoleAssignment</span> = <span class="token function">Get-MgServicePrincipalAppRoleAssignment</span> <span class="token operator">-</span>ServicePrincipalId $<span class="token punctuation">(</span><span class="token variable">$objUserAssignedManagedIdentity</span><span class="token punctuation">.</span>PrincipalId<span class="token punctuation">)</span><span class="token keyword">ForEach</span> <span class="token punctuation">(</span><span class="token variable">$objRoleAssignment</span> in <span class="token variable">$arrRoleAssignment</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token variable">$objRole</span> = <span class="token variable">$objGraphApp</span><span class="token punctuation">.</span>AppRoles <span class="token punctuation">|</span> <span class="token function">Where-Object</span> <span class="token punctuation">&#123;</span> <span class="token variable">$_</span><span class="token punctuation">.</span>Id <span class="token operator">-eq</span> <span class="token variable">$objRoleAssignment</span><span class="token punctuation">.</span>AppRoleId <span class="token punctuation">&#125;</span>  <span class="token string">" assignment for app role <span class="token function">$<span class="token punctuation">(</span><span class="token variable">$objRole</span><span class="token punctuation">.</span>Value<span class="token punctuation">)</span></span> was created on <span class="token function">$<span class="token punctuation">(</span><span class="token variable">$objRoleAssignment</span><span class="token punctuation">.</span>CreatedDateTime<span class="token punctuation">)</span></span> (ID: <span class="token function">$<span class="token punctuation">(</span><span class="token variable">$objRoleAssignment</span><span class="token punctuation">.</span>AppRoleId<span class="token punctuation">)</span></span>)"</span><span class="token punctuation">&#125;</span><span class="token string">"remove the resource group (and all its resources) with the following command after the deployment: Remove-AzResourceGroup <span class="token variable">$strDeploymentResourceGroupName</span> -Force"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Output of the deployment script:</p><img src="/2023/05/07/Bicep-Deployment-Scripts/img/img_script_output.png" class="" title="Script output"><h2 id="Bicep-Template"><a href="#Bicep-Template" class="headerlink" title="Bicep Template"></a>Bicep Template</h2><p>This is the main template. <a href="https://github.com/hoferandrea/blog/tree/main/DeploymentScriptAndUiWizard">You can find the newest versions and all submodules in my public Repo.</a></p><pre class="line-numbers language-bicep" data-language="bicep"><div class="caption"><span>mainTemplate.bicep</span><a href="https://github.com/hoferandrea/blog/tree/main/DeploymentScriptAndUiWizard">mainTemplate.bicep</a></div><code class="language-bicep"><span class="token keyword">param</span> uamiName <span class="token datatype class-name">string</span> <span class="token operator">=</span> <span class="token string">'mi-deploymentScript-10'</span><span class="token keyword">param</span> userPrincipalName <span class="token datatype class-name">string</span> <span class="token operator">=</span> <span class="token string">'john.contoso@hoferlabs.ch'</span><span class="token keyword">param</span> userDisplayName <span class="token datatype class-name">string</span> <span class="token operator">=</span> <span class="token string">'John Contoso'</span><span class="token keyword">param</span> groupName <span class="token datatype class-name">string</span> <span class="token operator">=</span> <span class="token string">'Sales'</span><span class="token keyword">param</span> groupDescription <span class="token datatype class-name">string</span> <span class="token operator">=</span> <span class="token string">'Sales Group'</span><span class="token keyword">param</span> storageAccountName <span class="token datatype class-name">string</span> <span class="token operator">=</span> <span class="token string">'sahoferlabssales'</span><span class="token keyword">param</span> storageAccountType <span class="token datatype class-name">string</span> <span class="token operator">=</span> <span class="token string">'Standard_LRS'</span><span class="token keyword">param</span> storageAccountFileShareName <span class="token datatype class-name">string</span> <span class="token operator">=</span> <span class="token string">'fshoferlabssales'</span><span class="token keyword">param</span> targetResourceGroup <span class="token datatype class-name">string</span> <span class="token operator">=</span> <span class="token string">'rg-target-10'</span><span class="token keyword">targetScope</span> <span class="token operator">=</span> <span class="token string">'resourceGroup'</span><span class="token comment">// describe deployment script for the AAD user</span><span class="token keyword">module</span> deploymentScriptAadUser <span class="token string">'modules/createAadUser.bicep'</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token property">name</span><span class="token operator">:</span> <span class="token string">'aadUserDeployment'</span>  <span class="token property">dependsOn</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>  <span class="token property">params</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">uamiName</span><span class="token operator">:</span> uamiName    <span class="token property">userPrincipalName</span><span class="token operator">:</span> userPrincipalName    <span class="token property">userDisplayName</span><span class="token operator">:</span> userDisplayName  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// describe deployment script for the AAD group</span><span class="token keyword">module</span> deploymentScriptAadGroup <span class="token string">'modules/createAadGroup.bicep'</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token property">name</span><span class="token operator">:</span> <span class="token string">'aadGroupDeployment'</span>  <span class="token property">dependsOn</span><span class="token operator">:</span> <span class="token punctuation">[</span> deploymentScriptAadUser <span class="token punctuation">]</span>  <span class="token property">params</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">uamiName</span><span class="token operator">:</span> uamiName    <span class="token property">groupName</span><span class="token operator">:</span> groupName    <span class="token property">groupDescription</span><span class="token operator">:</span> groupDescription  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// describe deployment script for the AAD group membership</span><span class="token keyword">module</span> deploymentScriptAadGroupMembership <span class="token string">'modules/assignAadGroupMembershipToUser.bicep'</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token property">name</span><span class="token operator">:</span> <span class="token string">'aadGroupMembershipDeployment'</span>  <span class="token property">dependsOn</span><span class="token operator">:</span> <span class="token punctuation">[</span> deploymentScriptAadGroup <span class="token punctuation">]</span>  <span class="token property">params</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">uamiName</span><span class="token operator">:</span> uamiName    <span class="token property">userId</span><span class="token operator">:</span> deploymentScriptAadUser<span class="token punctuation">.</span>outputs<span class="token punctuation">.</span>userId    <span class="token property">groupId</span><span class="token operator">:</span> deploymentScriptAadGroup<span class="token punctuation">.</span>outputs<span class="token punctuation">.</span>groupId  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// describe storage account</span><span class="token keyword">module</span> storageAccount <span class="token string">'modules/storageAccount.bicep'</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token property">name</span><span class="token operator">:</span> <span class="token string">'storageAccountDeployment'</span>  <span class="token property">dependsOn</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>  <span class="token property">scope</span><span class="token operator">:</span> <span class="token function">resourceGroup</span><span class="token punctuation">(</span>targetResourceGroup<span class="token punctuation">)</span>  <span class="token property">params</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">storageAccountName</span><span class="token operator">:</span> storageAccountName    <span class="token property">storageAccountType</span><span class="token operator">:</span> storageAccountType  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// describe file share</span><span class="token keyword">module</span> storageAccountFileShare <span class="token string">'modules/storageAccountFileShare.bicep'</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token property">name</span><span class="token operator">:</span> <span class="token string">'storageAccountFileShareDeployment'</span>  <span class="token property">dependsOn</span><span class="token operator">:</span> <span class="token punctuation">[</span> storageAccount <span class="token punctuation">]</span>  <span class="token property">scope</span><span class="token operator">:</span> <span class="token function">resourceGroup</span><span class="token punctuation">(</span>targetResourceGroup<span class="token punctuation">)</span>  <span class="token property">params</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">storageAccountName</span><span class="token operator">:</span> storageAccountName    <span class="token property">storageAccountFileShareName</span><span class="token operator">:</span> storageAccountFileShareName  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// describe storage account permissions</span><span class="token keyword">module</span> storageAccountAzureRoleAssignment <span class="token string">'modules/storageAccountRoleAssignment.bicep'</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token property">name</span><span class="token operator">:</span> <span class="token string">'storageAccountAzureRoleAssignmentDeployment'</span>  <span class="token property">dependsOn</span><span class="token operator">:</span> <span class="token punctuation">[</span> deploymentScriptAadGroup<span class="token punctuation">,</span> storageAccountFileShare <span class="token punctuation">]</span>  <span class="token property">scope</span><span class="token operator">:</span> <span class="token function">resourceGroup</span><span class="token punctuation">(</span>targetResourceGroup<span class="token punctuation">)</span>  <span class="token property">params</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">principalId</span><span class="token operator">:</span> deploymentScriptAadGroup<span class="token punctuation">.</span>outputs<span class="token punctuation">.</span>groupId    <span class="token property">roleDefinitionId</span><span class="token operator">:</span> <span class="token string">'0c867c2a-1d8c-454a-a3db-ab2ea1bdc8bb'</span> <span class="token comment">// Storage File Data SMB Share Contributor</span>    <span class="token property">storageAccountName</span><span class="token operator">:</span> storageAccountName  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Deployment-and-clean-up"><a href="#Deployment-and-clean-up" class="headerlink" title="Deployment and clean up"></a>Deployment and clean up</h2><p>We can either build the ARM File using <code>az bicep build --file .\mainTemplate.bicep</code> or deploy the ARM directly:<br><a href="https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2Fhoferandrea%2Fblog%2Fmain%2FDeploymentScriptAndUiWizard%2FmainTemplate.json"><img src="https://aka.ms/deploytoazurebutton" alt="Deploy to Azure"></a></p><img src="/2023/05/07/Bicep-Deployment-Scripts/img/img_custom_deployment.png" class="" title="custom deployment"><p>The UI looks terrible, we will deal with that later.</p><p>After a while, the deployment succeeds:</p><img src="/2023/05/07/Bicep-Deployment-Scripts/img/img_custom_deployment_succeed.png" class="" title="custom deployment"><p>To delete the deployment resource group, use the command from the setup script.</p><h1 id="Details-x2F-Remarks"><a href="#Details-x2F-Remarks" class="headerlink" title="Details &#x2F; Remarks"></a>Details &#x2F; Remarks</h1><h2 id="Parameters"><a href="#Parameters" class="headerlink" title="Parameters"></a>Parameters</h2><p>An important part is that we are able to pass parameters to a deployment script and from a deployment script back to Bicep.</p><pre class="line-numbers language-bicep" data-language="bicep"><code class="language-bicep"><span class="token comment">// use the current time in the name, otherwise the script isn't triggered again </span><span class="token keyword">resource</span> createAadUser <span class="token string">'Microsoft.Resources/deploymentScripts@2020-10-01'</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token property">name</span><span class="token operator">:</span> <span class="token interpolated-string"><span class="token string">'createAadUser-</span><span class="token interpolation"><span class="token punctuation">$&#123;</span><span class="token expression">utcValue</span><span class="token punctuation">&#125;</span></span><span class="token string">'</span></span>  <span class="token property">location</span><span class="token operator">:</span> location  <span class="token property">kind</span><span class="token operator">:</span> <span class="token string">'AzurePowerShell'</span>  <span class="token property">identity</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">type</span><span class="token operator">:</span> <span class="token string">'UserAssigned'</span>    <span class="token property">userAssignedIdentities</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token interpolated-string"><span class="token string">'</span><span class="token interpolation"><span class="token punctuation">$&#123;</span><span class="token expression">userAssignedManagedIdentity<span class="token punctuation">.</span>id</span><span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token property">properties</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">azPowerShellVersion</span><span class="token operator">:</span> <span class="token string">'8.3'</span>    <span class="token property">forceUpdateTag</span><span class="token operator">:</span> utcValue    <span class="token property">scriptContent</span><span class="token operator">:</span> <span class="token function">loadTextContent</span><span class="token punctuation">(</span><span class="token string">'createAadUser.ps1'</span><span class="token punctuation">)</span>    <span class="token property">arguments</span><span class="token operator">:</span> <span class="token interpolated-string"><span class="token string">'-userPrincipalName \\"</span><span class="token interpolation"><span class="token punctuation">$&#123;</span><span class="token expression">userPrincipalName</span><span class="token punctuation">&#125;</span></span><span class="token string">\\" -userDisplayName \\"</span><span class="token interpolation"><span class="token punctuation">$&#123;</span><span class="token expression">userDisplayName</span><span class="token punctuation">&#125;</span></span><span class="token string">\\"'</span></span>    <span class="token property">retentionInterval</span><span class="token operator">:</span> <span class="token string">'P1D'</span>    <span class="token property">cleanupPreference</span><span class="token operator">:</span> <span class="token string">'OnExpiration'</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">output</span> userId <span class="token datatype class-name">string</span> <span class="token operator">=</span> createAadUser<span class="token punctuation">.</span>properties<span class="token punctuation">.</span>outputs<span class="token punctuation">.</span>userId<span class="token keyword">output</span> result <span class="token datatype class-name">string</span> <span class="token operator">=</span> createAadUser<span class="token punctuation">.</span>properties<span class="token punctuation">.</span>outputs<span class="token punctuation">.</span>result<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>We require AZ Powershell version 8.3 and define the user-assigned managed identity. We pass two arguments to the deployment script. We use <code>\\&quot;</code> to escape the <code>&quot;</code>, that way we are able to pass parameters with spaces (e.g. group description). </p><p>At the bottom, we see the expected output from the deployment script. In Powershell we have to create a hashtable:</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"><span class="token variable">$DeploymentScriptOutputs</span> = @<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token variable">$DeploymentScriptOutputs</span><span class="token punctuation">[</span><span class="token string">"userId"</span><span class="token punctuation">]</span> = $<span class="token punctuation">(</span><span class="token variable">$objUser</span><span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token variable">$DeploymentScriptOutputs</span><span class="token punctuation">[</span><span class="token string">"result"</span><span class="token punctuation">]</span> = <span class="token variable">$result</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>In Bicep, we can pass the Module outputs to other modules:</p><pre class="line-numbers language-bicep" data-language="bicep"><code class="language-bicep"><span class="token keyword">module</span> deploymentScriptAadGroupMembership <span class="token string">'modules/assignAadGroupMembershipToUser.bicep'</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token property">name</span><span class="token operator">:</span> <span class="token string">'aadGroupMembershipDeployment'</span>  <span class="token property">dependsOn</span><span class="token operator">:</span> <span class="token punctuation">[</span> deploymentScriptAadGroup <span class="token punctuation">]</span>  <span class="token property">params</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">uamiName</span><span class="token operator">:</span> uamiName    <span class="token property">userId</span><span class="token operator">:</span> deploymentScriptAadUser<span class="token punctuation">.</span>outputs<span class="token punctuation">.</span>userId    <span class="token property">groupId</span><span class="token operator">:</span> deploymentScriptAadGroup<span class="token punctuation">.</span>outputs<span class="token punctuation">.</span>groupId  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Redeployments"><a href="#Redeployments" class="headerlink" title="Redeployments"></a>Redeployments</h2><p>Because our deployments scripts are designed for multiple deployments (IaC approach) we can rerun the deployment with the same parameters again and it still succeeds.</p><img src="/2023/05/07/Bicep-Deployment-Scripts/img/img_custom_deployment_userexists.png" class="" title="redeployment"><p>It’s important that we only create resources (like AAD users) if they don’t already exist and also output needed parameters (like the user id).</p><h2 id="Troubleshoot-Deployment-Scripts"><a href="#Troubleshoot-Deployment-Scripts" class="headerlink" title="Troubleshoot Deployment Scripts"></a>Troubleshoot Deployment Scripts</h2><p>We can connect to the Container instance which is running our Deployment Script:</p><img src="/2023/05/07/Bicep-Deployment-Scripts/img/img_trouble_resourceGroupContents.png" class="" title="resource group content"><img src="/2023/05/07/Bicep-Deployment-Scripts/img/img_trouble_container.png" class="" title="container"><p>To run Powershell commands, we have to start Powershell first using the <code>pwsh</code> command:</p><img src="/2023/05/07/Bicep-Deployment-Scripts/img/img_trouble_container_powershell.png" class="" title="container"><p>As you can see, the Container runs as our defined user-assigned managed identity. We can run and test our deployment scripts directly in the container instance.</p><p>You can set the retention of the deployment resources in Bicep (retention of storage account&#x2F;container for the deployment).</p><h2 id="UI-Wizard"><a href="#UI-Wizard" class="headerlink" title="UI Wizard"></a>UI Wizard</h2><p>We will replace the ugly default UI page with a nicer version in the next post.</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Intro-and-possible-use-cases&quot;&gt;&lt;a href=&quot;#Intro-and-possible-use-cases&quot; class=&quot;headerlink&quot; title=&quot;Intro and possible use cases&quot;&gt;&lt;/a&gt;Intro and possible use cases&lt;/h1&gt;&lt;p&gt;For a project I needed to create AAD groups while only having a single Bicep&amp;#x2F;ARM deployment (including UI Wizard)… I decided to go with deployment scripts (Powershell) and a user-assigned Managed Identity. This approach can be used for &lt;a href=&quot;https://learn.microsoft.com/en-us/partner-center/marketplace/plan-azure-app-solution-template&quot;&gt;Azure Market Place offers&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://learn.microsoft.com/en-us/training/modules/extend-resource-manager-template-deployment-scripts/1-introduction&quot;&gt;Deployment scripts in ARM&amp;#x2F;Bicep enable custom automation for your environment management. You use deployment scripts to execute your own scripts within your ARM template deployments.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Possible use cases (not complete): &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;create resources which can’t be described using Bicep, e.g.:&lt;ul&gt;
&lt;li&gt;AAD users &amp;#x2F; groups&lt;/li&gt;
&lt;li&gt;External identities settings like catalogs and access packages&lt;/li&gt;
&lt;li&gt;Identity governance settings like connected organizations&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;consume external APIs&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Outputs from deployment scripts can be “returned” (e.g created AAD group identifiers).  &lt;/p&gt;</summary>
    
    
    
    
    <category term="Bicep" scheme="http://hoferlabs.ch/tags/Bicep/"/>
    
    <category term="Automation" scheme="http://hoferlabs.ch/tags/Automation/"/>
    
    <category term="Azure" scheme="http://hoferlabs.ch/tags/Azure/"/>
    
  </entry>
  
  <entry>
    <title>Powershell/Graph | Assign Graph Application Permissions</title>
    <link href="http://hoferlabs.ch/2023/05/06/Powershell-Graph-Assign-Graph-Application-Permissions/"/>
    <id>http://hoferlabs.ch/2023/05/06/Powershell-Graph-Assign-Graph-Application-Permissions/</id>
    <published>2023-05-06T19:14:30.000Z</published>
    <updated>2023-05-07T10:07:39.394Z</updated>
    
    <content type="html"><![CDATA[<p>The <a href="https://learn.microsoft.com/en-us/graph/migrate-azure-ad-graph-faq">Azure Active Directory module is not supported in newer Powershell versions (7+) and will be retired at any time after June 30, 2023</a>. I used a script by <a href="https://gist.github.com/maayanlux/e6ca2d92b3d5a13a3905dff3244495db">maayanlux</a> from the <a href="https://azurecloudai.blog/2023/03/22/azure-ad-powershell-to-microsoft-graph-powershell/">Azure Cloud AI Blog</a> to assign Graph Application Permissions in the past, but couldn’t get it working with newer Powershell Versions. </p><p>The new way is to use the Graph Module (&#x2F;API). I found a script from <a href="https://jannikreinhard.com/2023/04/09/how-to-start-with-azure-automation-runbook-to-automate-tasks-in-intune/">Jannik Reinhard</a> but it doesn’t support multiple permissions. Let’s combine them… I also added a verify step which shows current assigned permissions and when they were assigned…</p><span id="more"></span><pre class="line-numbers language-powershell" data-language="powershell"><div class="caption"><span>assignGraphPermissions.ps1</span><a href="https://github.com/hoferandrea/blog/tree/main/assignGraphPermissions">assignGraphPermissions.ps1</a></div><code class="language-powershell"><span class="token string">"####################################################################################################################################"</span><span class="token string">"# hoferlabs.ch                                                                                                                     #"</span><span class="token string">"# assign Graph application permissions using Graph Powershell Module                                                               #"</span><span class="token string">"# Version: 0.1                                                                                                                     #"</span><span class="token string">"# Inspired by https://jannikreinhard.com/2023/04/09/how-to-start-with-azure-automation-runbook-to-automate-tasks-in-intune/ and    #"</span><span class="token string">"# https://azurecloudai.blog/2023/03/22/azure-ad-powershell-to-microsoft-graph-powershell/                                          #"</span><span class="token string">"####################################################################################################################################"</span><span class="token comment"># edit here</span><span class="token comment"># for enterprise applications / managed identities: use the object id of the enterprise application</span><span class="token variable">$strAppId</span> = <span class="token string">"c2280552-0c9a-43e7-8f44-e862d30c8058"</span><span class="token variable">$arrPermissions</span> = <span class="token string">"User.ReadWrite.All"</span><span class="token punctuation">,</span> <span class="token string">"Group.ReadWrite.All"</span><span class="token punctuation">,</span> <span class="token string">"Directory.ReadWrite.All"</span><span class="token punctuation">,</span> <span class="token string">"GroupMember.ReadWrite.All"</span><span class="token punctuation">,</span> <span class="token string">"RoleManagement.ReadWrite.Directory"</span> <span class="token comment"># do not edit</span><span class="token variable">$strGraphAppId</span> = <span class="token string">"00000003-0000-0000-c000-000000000000"</span><span class="token function">Connect-MgGraph</span> <span class="token operator">-</span>Scopes Application<span class="token punctuation">.</span>Read<span class="token punctuation">.</span>All<span class="token punctuation">,</span> AppRoleAssignment<span class="token punctuation">.</span>ReadWrite<span class="token punctuation">.</span>All<span class="token punctuation">,</span> RoleManagement<span class="token punctuation">.</span>ReadWrite<span class="token punctuation">.</span>Directory<span class="token string">"get graph app..."</span><span class="token variable">$objGraphApp</span> = <span class="token function">Get-MgServicePrincipal</span> <span class="token operator">-</span><span class="token keyword">Filter</span> <span class="token string">"AppId eq '<span class="token variable">$strGraphAppId</span>'"</span><span class="token string">"assign permissions..."</span><span class="token keyword">ForEach</span> <span class="token punctuation">(</span><span class="token variable">$strPermission</span> in <span class="token variable">$arrPermissions</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token string">" assign permission <span class="token variable">$strPermission</span>..."</span>    <span class="token variable">$objRole</span> = <span class="token variable">$objGraphApp</span><span class="token punctuation">.</span>AppRoles <span class="token punctuation">|</span> <span class="token function">Where-Object</span> <span class="token punctuation">&#123;</span> <span class="token variable">$_</span><span class="token punctuation">.</span>Value <span class="token operator">-eq</span> <span class="token variable">$strPermission</span> <span class="token punctuation">&#125;</span>    <span class="token variable">$objResult</span> = <span class="token function">New-MgServicePrincipalAppRoleAssignment</span> <span class="token operator">-</span>ServicePrincipalId <span class="token variable">$strAppId</span> <span class="token operator">-</span>PrincipalId <span class="token variable">$strAppId</span> <span class="token operator">-</span>ResourceId <span class="token variable">$objGraphApp</span><span class="token punctuation">.</span>Id <span class="token operator">-</span>AppRoleId <span class="token variable">$objRole</span><span class="token punctuation">.</span>Id<span class="token punctuation">&#125;</span><span class="token string">"verify permissions..."</span><span class="token variable">$arrRoleAssignment</span> = <span class="token function">Get-MgServicePrincipalAppRoleAssignment</span> <span class="token operator">-</span>ServicePrincipalId <span class="token variable">$strAppId</span><span class="token keyword">ForEach</span> <span class="token punctuation">(</span><span class="token variable">$objRoleAssignment</span> in <span class="token variable">$arrRoleAssignment</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$objRole</span> = <span class="token variable">$objGraphApp</span><span class="token punctuation">.</span>AppRoles <span class="token punctuation">|</span> <span class="token function">Where-Object</span> <span class="token punctuation">&#123;</span> <span class="token variable">$_</span><span class="token punctuation">.</span>Id <span class="token operator">-eq</span> <span class="token variable">$objRoleAssignment</span><span class="token punctuation">.</span>AppRoleId<span class="token punctuation">&#125;</span>    <span class="token string">" assignment for app role <span class="token function">$<span class="token punctuation">(</span><span class="token variable">$objRole</span><span class="token punctuation">.</span>Value<span class="token punctuation">)</span></span> was created on <span class="token function">$<span class="token punctuation">(</span><span class="token variable">$objRoleAssignment</span><span class="token punctuation">.</span>CreatedDateTime<span class="token punctuation">)</span></span> (ID: <span class="token function">$<span class="token punctuation">(</span><span class="token variable">$objRoleAssignment</span><span class="token punctuation">.</span>AppRoleId<span class="token punctuation">)</span></span>)"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Script outputs for assigning permissions to a managed identity:</p><img src="/2023/05/06/Powershell-Graph-Assign-Graph-Application-Permissions/script_output.png" class="" title="Script output"><p>Permissions:</p><img src="/2023/05/06/Powershell-Graph-Assign-Graph-Application-Permissions/app_permissions.png" class="" title="App permissions">]]></content>
    
    
    <summary type="html">&lt;p&gt;The &lt;a href=&quot;https://learn.microsoft.com/en-us/graph/migrate-azure-ad-graph-faq&quot;&gt;Azure Active Directory module is not supported in newer Powershell versions (7+) and will be retired at any time after June 30, 2023&lt;/a&gt;. I used a script by &lt;a href=&quot;https://gist.github.com/maayanlux/e6ca2d92b3d5a13a3905dff3244495db&quot;&gt;maayanlux&lt;/a&gt; from the &lt;a href=&quot;https://azurecloudai.blog/2023/03/22/azure-ad-powershell-to-microsoft-graph-powershell/&quot;&gt;Azure Cloud AI Blog&lt;/a&gt; to assign Graph Application Permissions in the past, but couldn’t get it working with newer Powershell Versions. &lt;/p&gt;
&lt;p&gt;The new way is to use the Graph Module (&amp;#x2F;API). I found a script from &lt;a href=&quot;https://jannikreinhard.com/2023/04/09/how-to-start-with-azure-automation-runbook-to-automate-tasks-in-intune/&quot;&gt;Jannik Reinhard&lt;/a&gt; but it doesn’t support multiple permissions. Let’s combine them… I also added a verify step which shows current assigned permissions and when they were assigned…&lt;/p&gt;</summary>
    
    
    
    
    <category term="Powershell" scheme="http://hoferlabs.ch/tags/Powershell/"/>
    
    <category term="Graph API" scheme="http://hoferlabs.ch/tags/Graph-API/"/>
    
  </entry>
  
  <entry>
    <title>Regex | Sanitize Strings (KQL, Powershell)</title>
    <link href="http://hoferlabs.ch/2023/04/28/Regex-Sanitize-Strings-KQL-Powershell/"/>
    <id>http://hoferlabs.ch/2023/04/28/Regex-Sanitize-Strings-KQL-Powershell/</id>
    <published>2023-04-28T17:05:30.000Z</published>
    <updated>2023-05-06T20:02:22.900Z</updated>
    
    <content type="html"><![CDATA[<p>I recently came across some special chars in Sentinel Entitites which broke my KQL Query. I decided to create a whitelist solution to sanitize strings.</p><span id="more"></span><p>My goal was to replace all chars except for </p><ul><li>a-z&#x2F;A-Z</li><li>0-9 </li><li>spaces and _</li></ul><p>With a little help from ChatGPT i created the following expression:</p><p><code>[^a-zA-Z0-9 _]</code></p><p>Let’s break it down:</p><ul><li><code>[^a-zA-Z0-9 _]</code> - This is a character class, denoted by square brackets <code>[]</code>, which defines a set of characters that are to be matched.<ul><li><code>^</code> - The caret symbol at the beginning of the character class denotes negation, meaning it matches any character that is not in the set.</li><li><code>a-zA-Z0-9</code> - This range represents all lowercase letters (<code>a-z</code>), uppercase letters (<code>A-Z</code>), and digits (<code>0-9</code>).</li><li>&#96;&#96; - This space character represents a literal space.</li><li><code>_</code> - This underscore character represents a literal underscore.</li></ul></li></ul><p>In summary, this regular expression matches any character that is not a letter (lowercase or uppercase), a digit, a space, or an underscore. It can be used to identify any special characters or symbols present in a given string.</p><p>If you want to whitelist more characters, add them before the ]. Let’s add ‘.’ for FQDNs:<br><code>[^a-zA-Z0-9 _.]</code></p><p>I let ChatGPT create the following test string:</p><blockquote><p>!”#$%&amp;’()*+,-.&#x2F;0123456789:;&lt;&#x3D;&gt;?@AB CDEFGHIJKLMNOPQRSTUVWXYZ[]^_&#96;abcdefghijklmnopqrstuvwxyz{|}~¡¢£¤¥¦§¨©ª«¬®¯°±²³´µ¶·¸”</p></blockquote><h1 id="Replace-special-chars-in-KQL"><a href="#Replace-special-chars-in-KQL" class="headerlink" title="Replace special chars in KQL"></a>Replace special chars in KQL</h1><pre class="line-numbers language-kusto" data-language="kusto"><code class="language-kusto"><span class="token keyword">let</span> strRegex <span class="token operator">=</span> <span class="token string">@'[^a-zA-Z0-9 _]'</span><span class="token punctuation">;</span><span class="token keyword">let</span> strTest <span class="token operator">=</span> <span class="token string">'!"#$%&amp;\'()*+,-./0123456789:;&lt;=>?@AB CDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz&#123;|&#125;~¡¢£¤¥¦§¨©ª«¬®¯°±²³´µ¶·¸"'</span><span class="token punctuation">;</span><span class="token keyword">let</span> strSanitized <span class="token operator">=</span> <span class="token function">replace_regex</span><span class="token punctuation">(</span>strTest<span class="token punctuation">,</span> strRegex<span class="token punctuation">,</span> <span class="token string">@''</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">print</span> strSanitized<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>Output:</p><img src="/2023/04/28/Regex-Sanitize-Strings-KQL-Powershell/output_kql.png" class="" title="Script output"><h1 id="Replace-special-chars-in-Powershell"><a href="#Replace-special-chars-in-Powershell" class="headerlink" title="Replace special chars in Powershell"></a>Replace special chars in Powershell</h1><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"><span class="token variable">$strRegex</span> = <span class="token string">'[^a-zA-Z0-9 _]'</span><span class="token variable">$strTest</span> = <span class="token string">'!"#$%&amp;''()*+,-./0123456789:;&lt;=>?@AB CDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz&#123;|&#125;~¡¢£¤¥¦§¨©ª«¬®¯°±²³´µ¶·¸"'</span><span class="token variable">$strTest</span> <span class="token operator">-replace</span> <span class="token variable">$strRegex</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>Output:</p><img src="/2023/04/28/Regex-Sanitize-Strings-KQL-Powershell/output_powershell.png" class="" title="Script output">]]></content>
    
    
    <summary type="html">&lt;p&gt;I recently came across some special chars in Sentinel Entitites which broke my KQL Query. I decided to create a whitelist solution to sanitize strings.&lt;/p&gt;</summary>
    
    
    
    
    <category term="Powershell" scheme="http://hoferlabs.ch/tags/Powershell/"/>
    
    <category term="KQL" scheme="http://hoferlabs.ch/tags/KQL/"/>
    
    <category term="Regex" scheme="http://hoferlabs.ch/tags/Regex/"/>
    
  </entry>
  
  <entry>
    <title>Sentinel Playground - Bicep Edition</title>
    <link href="http://hoferlabs.ch/2023/04/25/Sentinel-Playground-Bicep-Edition/"/>
    <id>http://hoferlabs.ch/2023/04/25/Sentinel-Playground-Bicep-Edition/</id>
    <published>2023-04-25T03:50:40.000Z</published>
    <updated>2023-05-06T20:15:53.661Z</updated>
    
    <content type="html"><![CDATA[<p>Sentinel Playground is a project that aims to speed up deployment and configuration tasks of a Sentinel Lab&#x2F;Demo environment, including sample content and Bicep Templates. This project seeks to use Bicep only.</p><span id="more"></span><h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>The following components can be deployed&#x2F;configured:</p><ul><li>resource group</li><li>Log Analytics workspace + Sentinel solution</li><li>Log Analytics workspace config (retention, daily cap)</li><li>Sentinel config (UEBA, Anomalies)</li><li>Sentinel data connectors<ul><li>Azure Activity</li><li>Azure Active Directory</li><li>Defender 365 incidents</li></ul></li><li>demo playbook (with a user-assigned Managed Identity + required permissions)</li><li>Sentinel permissions to trigger playbooks</li><li>Sentinel Content (including Bicep templates)<ul><li>analytics rule</li><li>automation rule</li><li>log query (in a query pack)</li><li>watchlist (with CSV-support)</li></ul></li><li>all analytics rules for Azure Activity and Azure Active Directory are enabled</li></ul><p><strong>You can find the ReadMe including Deployment Instructions in my public repository <a href="https://github.com/hoferandrea/Sentinel-Playground-Bicep-Edition">here</a>.</strong></p><p>I will explain some of the key elements in seperate Blog Posts:</p><ul><li>Deployment Scripts + user-assigned Managed Identities</li><li>Modules and reusablitly</li><li>API Connections + Logic Apps</li><li>Watchlists + CSV Files</li><li>UI Wizard</li><li>Outputs and Conditions</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;Sentinel Playground is a project that aims to speed up deployment and configuration tasks of a Sentinel Lab&amp;#x2F;Demo environment, including sample content and Bicep Templates. This project seeks to use Bicep only.&lt;/p&gt;</summary>
    
    
    
    <category term="Bicep" scheme="http://hoferlabs.ch/categories/Bicep/"/>
    
    <category term="Sentinel" scheme="http://hoferlabs.ch/categories/Bicep/Sentinel/"/>
    
    <category term="Automation" scheme="http://hoferlabs.ch/categories/Bicep/Sentinel/Automation/"/>
    
    
    <category term="Bicep" scheme="http://hoferlabs.ch/tags/Bicep/"/>
    
    <category term="Sentinel" scheme="http://hoferlabs.ch/tags/Sentinel/"/>
    
    <category term="Automation" scheme="http://hoferlabs.ch/tags/Automation/"/>
    
  </entry>
  
</feed>
